@attribute [Authorize(Roles = Roles.Administrator)]
@inherits OSMAwaitableComponent


<PageTitle>@Localizer["Goods"]</PageTitle>

@* <OSMGridTopBar OnCreate=ShowCreateDialog /> *@
<MudDataGrid @ref=MudDataGrid
            T="BasicGood"
            Class="Mud-DataGrid"
            ServerData="LoadGridData"
            RowsPerPage="5"
            SelectedItemsChanged=SelectedItemsChanged
            MultiSelection=true
            SortMode=SortMode.Single
            FilterMode=DataGridFilterMode.ColumnFilterMenu>

    <ToolBarContent>
        <MudText Typo="Typo.h6">
            Goods in Store
            <MudIconButton Size="@Size.Large" Icon="@Icons.Material.Outlined.AddCircle" Color="Color.Primary" OnClick=@(async (e) => await ShowBasicGoodDialog()) />
        </MudText>
        <MudSpacer />
        <MudText Style="width: 90px !important;" Class="mr-2">
            <MudSelect T="string"
                        Disabled=true
                        Value=FileType.Pdf.ToString()
                        Label=@Localizer["Export"]
                        Margin="Margin.Dense"
                        Variant="Variant.Outlined"
                        AnchorOrigin="Origin.CenterCenter">
                @foreach (var fileType in Enum.GetNames<FileType>())
                {
                    @* <MudSelectItem Value=fileType @onclick=@(e => Export(fileType)/> *@
                    <MudSelectItem Value=fileType />
                }
            </MudSelect>
        </MudText>
        <MudTextField @onkeypress=OnSearchTextBoxKeyPress @bind-Value=SearchString Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                                AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>

    <Columns>
        <SelectColumn T="BasicGood" />
        <PropertyColumn Property="x => x.Type" Title=@BasicGoodFieldIdentifier.Type.ToString() Filterable=true>
            <FooterTemplate>
                @if (SelectedGoods?.Count != 0)
                {
                    <MudButton OnClick=@(async e => await DeleteSelectedGoods())
                               Variant="Variant.Filled"
                               Color="Color.Secondary">
                        @Localizer["Delete"]
                    </MudButton>
                }
            </FooterTemplate>
        </PropertyColumn>
        <PropertyColumn Property="x => x.Name" Title=@BasicGoodFieldIdentifier.Name.ToString() />
        <PropertyColumn Property="x => x.Price" Title=@BasicGoodFieldIdentifier.Price.ToString()  Filterable=true/>
        <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate>
                <MudStack Row>
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Delete" Color=Color.Error OnClick=@(async (e) => await DeleteGood(context.Item)) />
                    <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" Color=Color.Primary OnClick=@(async (e) => await ShowBasicGoodDialog(context.Item.Id)) />
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
    <PagerContent>
        <MudDataGridPager T="BasicGood" PageSizeOptions=@(new int[] {5, 10, 20}) />
    </PagerContent>
</MudDataGrid>